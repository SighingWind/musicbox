NAME	LCDDRV
;THIS DRIVER IS FOR I/O PORT CONNECTION, NOT FOR BUS CONNECTION

PUBLIC	_LCDWRITECMD
PUBLIC	LCDGETADDR
PUBLIC	_LCDWRITECHAR
PUBLIC	LCDREADCHAR
PUBLIC	_LCDSETPOS

LCD_RS	BIT	P2.5
LCD_RW	BIT	P2.6
LCD_EN	BIT	P2.7
LCD_DB	EQU	P0

?PR?_LCDWRITECMD?LCDDRV	SEGMENT	CODE
	RSEG	?PR?_LCDWRITECMD?LCDDRV

;FUNCTION:	WRITE COMMAND TO LCD
;IN PARAMETER:	COMMAND, IN R7
;OUT PARAMETER:	NO
;CALLER	MAINTAINENCE
_LCDWRITECMD:
	CALL	LCD_CHECK_BF
	MOV	LCD_DB, R7
	SETB	LCD_EN
	CLR	LCD_RS
	CLR	LCD_RW
	CLR	LCD_EN
	RET

?PR?LCD_CHECK_BF?LCDDRV	SEGMENT	CODE
	RSEG	?PR?LCD_CHECK_BF?LCDDRV

;FUNCTION:	CHECK BUSY FLAGE, WAIT UNTIL IT IS LOW
;IN PARAMETER:	NO
;OUT PARAMETER:	NO
;CALLER	MAINTAINENCE
LCD_CHECK_BF:
	MOV	LCD_DB, #0FFH
	CLR	LCD_RS
	SETB	LCD_RW
CHK_BF:
	CLR	LCD_EN
	NOP
	SETB	LCD_EN
	JB	LCD_DB.7, CHK_BF
	CLR	LCD_EN
	RET

?PR?LCDGETADDR?LCDDRV	SEGMENT	CODE
	RSEG	?PR?LCDGETADDR?LCDDRV

;FUNCTION:	GET CURRENT ADDRESS
;IN PARAMETER:	NO
;OUT PARAMETER:	CURRENT ADDRESS, IN R7
;CALLER	MAINTAINENCE
LCDGETADDR:
	MOV	LCD_DB, #0FFH
	CLR	LCD_RS
	SETB	LCD_RW
GET_ADDR:
	CLR	LCD_EN
	NOP
	SETB	LCD_EN
	JB	LCD_DB.7, GET_ADDR
	MOV	R7, LCD_DB
	CLR	LCD_EN
	RET

?PR?_LCDWRITECHAR?LCDDRV	SEGMENT	CODE
	RSEG	?PR?_LCDWRITECHAR?LCDDRV

;FUNCTION:	WRITE DATA TO LCD
;IN PARAMETER:	DISPLAY DATA, IN R7
;OUT PARAMETER:	NO
;CALLER	MAINTAINENCE
_LCDWRITECHAR:
	CALL	LCD_CHECK_BF
	MOV	LCD_DB, R7
	SETB	LCD_EN
	SETB	LCD_RS
	CLR	LCD_RW
	CLR	LCD_EN
	RET

?PR?LCDREADCHAR?LCDDRV	SEGMENT	CODE
	RSEG	?PR?LCDREADCHAR?LCDDRV

;FUNCTION:	READ DATA FROM LCD, ADDRESS IS SET BY CALLER
;IN PARAMETER:	NO
;OUT PARAMETER:	DISPLAY DATA IN CURRENT ADDRESS
;CALLER	MAINTAINENCE
LCDREADCHAR:
	CALL	LCD_CHECK_BF
	MOV	LCD_DB, #0FFH
	SETB	LCD_RS
	SETB	LCD_RW
	SETB	LCD_EN
	NOP
	MOV	R7, LCD_DB
	CLR	LCD_EN
	RET

?PR?_LCDSETPOS?LCDDRV	SEGMENT		CODE
	RSEG	?PR?_LCDSETPOS?LCDDRV
_LCDSETPOS:
;INPUT PARAMETERS:
;R7, LINE 1~4
;R5, COLUMN 1~20
	PUSH	ACC
	MOV	A, R7
	DEC	A
	JZ	LINE1
	DEC	A
	JZ	LINE2
	DEC	A
	JZ	LINE3
	MOV	A, #0D4H
	SJMP	COLUMN
LINE1:	MOV	A, #80H
	SJMP	COLUMN
LINE2:	MOV	A, #0C0H
	SJMP	COLUMN
LINE3:	MOV	A, #94H
COLUMN:
	DEC	R5
	ADD	A, R5
	MOV	R7, A
	CALL	_LCDWRITECMD
	POP	ACC
	RET

	END
